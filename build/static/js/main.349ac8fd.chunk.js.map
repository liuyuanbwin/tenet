{"version":3,"sources":["config/index.ts","utils/index.ts","pages/Home.tsx","components/DemoWrapper.tsx","pages/FunctionDemo.tsx","routes/config.ts","pages/DatabaseDemo.tsx","pages/EmailLogin.tsx","pages/404.tsx","routes/index.tsx","layout/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["config","envId","require","storageBaseUrl","getApp","window","tcb","init","env","Search","ticketUrl","DemoWrapper","props","className","title","children","DemoBase64","useState","result","setResult","app","placeholder","enterButton","size","onSearch","base64","callFunction","name","data","str","then","res","catch","err","message","error","appRoutes","path","component","loginLoading","setLoginLoading","login","auth","getLoginState","style","height","width","src","alt","type","href","target","span","offset","showIcon","loading","userId","fetch","a","status","Error","statusText","json","signInWithTicket","ticket","credential","refreshToken","info","location","reload","finally","menu","collection","database","poem","setPoem","total","setTotal","list","setList","insertData","JSON","stringify","add","success","queryData","get","length","onClick","overflowY","header","bordered","dataSource","renderItem","item","Item","origin","content","author","e","console","log","subTitle","extra","RenderRoutes","map","route","index","key","exact","strict","Sider","Header","Content","Footer","MainLayout","history","useHistory","menus","year","Date","getFullYear","padding","display","flexDirection","flex","background","mode","onSelect","push","overflow","textAlign","filter","App","setLoading","script","document","createElement","head","appendChild","Promise","resolve","onload","loadScript","active","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.349ac8fd.chunk.js","sourcesContent":["/* eslint-disable */\r\nconst cloudbaseConfig = require('../../cloudbaserc')\r\n\r\nexport const config = {\r\n  envId: cloudbaseConfig.envId,\r\n  storageBaseUrl: ''\r\n}\r\n","import { config } from '@/config'\r\n\r\nexport const getApp = () => {\r\n  const app = window.tcb.init({\r\n    env: config.envId\r\n  })\r\n\r\n  // app.auth({\r\n  //   persistence: 'local'\r\n  // })\r\n  return app\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, Button, Input, Alert, message } from 'antd'\r\nimport { getApp } from '@/utils'\r\nimport { config } from '@/config'\r\n\r\nconst { Search } = Input\r\n\r\nconst ticketUrl = `https://${config.envId}.service.tcloudbase.com/login`\r\n\r\nexport const Home: React.FC<{}> = () => {\r\n  const app = getApp()\r\n  const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n  // 检测登录状态\r\n  const loginState = app.auth().getLoginState()\r\n  const login = !!loginState\r\n\r\n  const customLogin = (userId: string) => {\r\n    if (!userId) {\r\n      message.error('用户名不能为空！')\r\n      return\r\n    }\r\n\r\n    setLoginLoading(true)\r\n\r\n    fetch(`${ticketUrl}?userId=${userId}`)\r\n      .then(async (res) => {\r\n        if (res.status === 400) {\r\n          throw new Error(`${res.status}: ${res.statusText} 获取 Ticket 失败，用户 Id 不符合规则`)\r\n        }\r\n\r\n        if (res.status === 429) {\r\n          throw new Error(`${res.status}: ${res.statusText} API rate limit exceeded`)\r\n        }\r\n        const data = await res.json()\r\n\r\n        const auth = app.auth()\r\n\r\n        auth.signInWithTicket(data.ticket).then((res: any) => {\r\n          if (res?.credential?.refreshToken) {\r\n            message.info('登录成功！')\r\n            window.location.reload()\r\n          }\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message)\r\n      })\r\n      .finally(() => {\r\n        setLoginLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <img\r\n          style={{ height: '200px', width: '200px' }}\r\n          src={`${config.storageBaseUrl}/icon.png`}\r\n          alt=\"Logo 图片\"\r\n        />\r\n        <div className=\"margin-bottom-sm\">\r\n          <Button\r\n            className=\"text-df\"\r\n            type=\"link\"\r\n            href=\"https://cloud.tencent.com/product/tcb\"\r\n            target=\"_blank\"\r\n          >\r\n            云开发 Web 端示例\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Row>\r\n        <Col span={8} offset={8}>\r\n          {!login && (\r\n            <Alert\r\n              message=\"你还没有登录，使用前请先登录！\"\r\n              type=\"warning\"\r\n              showIcon\r\n              className=\"margin-bottom\"\r\n            />\r\n          )}\r\n          {login && (\r\n            <Alert\r\n              message=\"你已登录，无需再次登录！\"\r\n              type=\"info\"\r\n              showIcon\r\n              className=\"margin-bottom\"\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Search\r\n            size=\"middle\"\r\n            placeholder=\"输入你的用户名，用户名长度必须大于 4 位，由字母和数字组成\"\r\n            enterButton=\"自定义登录\"\r\n            loading={loginLoading}\r\n            onSearch={customLogin}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const DemoWrapper: React.SFC<{ title: string }> = (props) => {\r\n  return (\r\n    <div className=\"demo\">\r\n      <div className=\"margin-bottom-sm text-xs\">{props.title}</div>\r\n      <div className=\"demo-content\">{props.children}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Input, Divider, message } from 'antd'\r\nimport { DemoWrapper } from '@/components'\r\nimport { getApp } from '../utils'\r\n\r\nconst { Search } = Input\r\n\r\nconst DemoBase64: React.FC<{}> = () => {\r\n  const [result, setResult] = useState('')\r\n  const app = getApp()\r\n\r\n  const getBase64Encoding = (base64: string) => {\r\n    if (!base64) {\r\n      message.error('Base64 字符串不能为空！')\r\n      return\r\n    }\r\n\r\n    app\r\n      .callFunction({\r\n        name: 'base64',\r\n        data: {\r\n          str: base64\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        setResult(res.result.data)\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(err.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <DemoWrapper title=\"Base64 编码\">\r\n      <div>\r\n        <Search\r\n          placeholder=\"输入要编码的字符串\"\r\n          enterButton=\"计算\"\r\n          size=\"large\"\r\n          onSearch={getBase64Encoding}\r\n        />\r\n        <div className=\"margin-top-sm\">Output：{result}</div>\r\n      </div>\r\n      <Divider />\r\n    </DemoWrapper>\r\n  )\r\n}\r\n\r\nexport const FunctionDemo: React.FC<{}> = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"text-center text-sm text-bold\">云函数</div>\r\n      <Divider />\r\n      <DemoBase64 />\r\n    </div>\r\n  )\r\n}\r\n","import { RouteProps } from 'react-router'\r\nimport { Home, NoFoundPage, FunctionDemo, DatabaseDemo, EmailLogin } from '../pages'\r\n\r\nexport interface IRouteProps extends RouteProps {\r\n  menu?: boolean\r\n  title?: string\r\n}\r\n\r\n\r\nexport const appRoutes: IRouteProps[] = [\r\n  {\r\n    path: '/',\r\n    component: Home\r\n  },\r\n  {\r\n    title: '云函数',\r\n    path: '/function',\r\n    component: FunctionDemo,\r\n    menu: true\r\n  },\r\n  {\r\n    title: '数据库',\r\n    path: '/db',\r\n    component: DatabaseDemo,\r\n    menu: true\r\n  },\r\n  {\r\n    title: '登陆',\r\n    path: '/lg',\r\n    component: EmailLogin,\r\n    menu: true\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NoFoundPage\r\n  }\r\n]\r\n","import React, { useState } from 'react'\r\nimport { Button, List, message } from 'antd'\r\nimport { DemoWrapper } from '@/components'\r\nimport { getApp } from '@/utils'\r\n\r\nexport const DatabaseDemo: React.FC<{}> = () => {\r\n  const app = getApp()\r\n  const db = app.database()\r\n  const collection = db.collection('demo_web')\r\n  const [poem, setPoem] = useState('')\r\n  const [total, setTotal] = useState(0)\r\n  const [list, setList] = useState([])\r\n\r\n  const dataOrigin = 'https://v1.jinrishici.com/all.json'\r\n\r\n  const insertData = async () => {\r\n    const res = await fetch(dataOrigin)\r\n    const data = await res.json()\r\n    setPoem(JSON.stringify(data))\r\n    await collection.add(data)\r\n    message.success('添加数据成功！')\r\n  }\r\n\r\n  const queryData = async () => {\r\n    const res = await collection.get()\r\n    const total = res.data?.length || 0\r\n    setTotal(total)\r\n    setList(res.data)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center text-sm text-bold\">数据库</div>\r\n      <DemoWrapper title=\"数据库读\">\r\n        <div className=\"json flex flex-direction\">\r\n          <div className=\"operations padding-bottom\">\r\n            <Button type=\"primary\" onClick={insertData}>\r\n              新增数据\r\n            </Button>\r\n            <div className=\"padding-sm\">{poem}</div>\r\n          </div>\r\n        </div>\r\n      </DemoWrapper>\r\n\r\n      <DemoWrapper title=\"数据库读\">\r\n        <div className=\"json flex flex-direction\">\r\n          <div className=\"operations padding-bottom-sm\">\r\n            <Button type=\"primary\" onClick={queryData}>\r\n              获取数据\r\n            </Button>\r\n          </div>\r\n          <List\r\n            style={{ height: '300px', overflowY: 'scroll' }}\r\n            header={<div className=\"padding-sm\">总计数量：{total}</div>}\r\n            bordered\r\n            dataSource={list}\r\n            renderItem={(item: any) => (\r\n              <List.Item>\r\n                <div style={{ width: '100%' }}>\r\n                  <h1 className=\"text-center\">{item.origin}</h1>\r\n                  <p className=\"text-center\">{item.content}</p>\r\n                  <p className=\"text-right\">{item.author}</p>\r\n                </div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </DemoWrapper>\r\n    </div>\r\n  )\r\n}\r\n","import { Result, Button } from 'antd'\r\nimport React from 'react'\r\n// const { getApp } = require('../utils')\r\nimport { getApp } from '@/utils'\r\n\r\nexport const EmailLogin: React.FC<{}> = () => (\r\n  <Button onClick={e=>{\r\n    // let app = getApp()\r\n    // app.auth().signInWithEmailAndPassword('119077905@qq.com','wolaile').then(res => {\r\n    //   console.log('%cEmailLogin.tsx line:9 res', 'color: #26bfa5;', res);\r\n    // })\r\n  const app = getApp()\r\n  app\r\n  .callFunction({\r\n    name: 'base64',\r\n    data: {\r\n      str: 'base64'\r\n    }\r\n  })\r\n  .then((res: any) => {\r\n    console.log('%cEmailLogin.tsx line:21 res', 'color: #26bfa5;', res);\r\n  })\r\n  .catch((err: any) => {\r\n    console.log('%cEmailLogin.tsx line:24 err', 'color: #26bfa5;', err);\r\n  })\r\n   \r\n  }}>ssss</Button>\r\n)\r\n\r\n","import { Result } from 'antd'\r\nimport React from 'react'\r\n\r\nexport const NoFoundPage: React.FC<{}> = () => (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n    extra={<span>Back Home</span>}\r\n  />\r\n)\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, RouteProps } from 'react-router-dom'\r\nimport { appRoutes } from './config'\r\nexport * from './config'\r\n\r\nfunction SwitchRoutes(appRoutes: RouteProps[]) {\r\n  return (\r\n    <Switch>\r\n      {appRoutes.map((route, index) => (\r\n        <Route\r\n          key={index}\r\n          path={route.path}\r\n          component={route.component}\r\n          exact={route.exact || true}\r\n          strict={route.strict || false}\r\n        />\r\n      ))}\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport function RenderRoutes() {\r\n  return SwitchRoutes(appRoutes)\r\n}\r\n","import React from 'react'\r\nimport { Layout, Menu, Card, Avatar } from 'antd'\r\nimport { useHistory } from 'react-router'\r\nimport { IRouteProps } from '@/routes/config'\r\nimport { config } from '@/config'\r\nimport './index.less'\r\n\r\nconst { Sider, Header, Content, Footer } = Layout\r\n\r\nexport interface ILayoutProps {\r\n  menus: IRouteProps[]\r\n}\r\n\r\nexport function MainLayout(props: React.PropsWithChildren<ILayoutProps>) {\r\n  const history = useHistory()\r\n  const { menus } = props\r\n\r\n  const year = new Date().getFullYear()\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout style={{ height: '100%' }}>\r\n        <Header className=\"header flex\">\r\n          <div className=\"logo\">\r\n            <Avatar\r\n              style={{ height: '40px', width: '40px' }}\r\n              src={`${config.storageBaseUrl}/icon.png`}\r\n            />\r\n          </div>\r\n          <div className=\"home\">\r\n            <a href=\"/\">Home</a>\r\n          </div>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px', display: 'flex', flexDirection: 'column' }}>\r\n          <Layout style={{ padding: '24px 0', flex: '1 1 auto', background: '#fff' }}>\r\n            <Sider\r\n              width={200}\r\n              style={{\r\n                background: '#fff'\r\n              }}\r\n            >\r\n              <Menu\r\n                mode=\"inline\"\r\n                onSelect={({ key }) => {\r\n                  history.push(key as string)\r\n                }}\r\n              >\r\n                {menus.map((menu) => (\r\n                  <Menu.Item key={menu.path as string}>\r\n                    <span className=\"nav-text\">{menu.title}</span>\r\n                  </Menu.Item>\r\n                ))}\r\n              </Menu>\r\n            </Sider>\r\n            <Content style={{ padding: '0 24px' }}>\r\n              <Card className=\"card\" bordered={false}>\r\n                <div className=\"card-content\" style={{ overflow: 'auto' }}>\r\n                  {props.children}\r\n                </div>\r\n              </Card>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n        <Footer className=\"footer\" style={{ textAlign: 'center' }}>\r\n          Copyright &copy; 腾讯云 - 云开发 2018 - {year}\r\n        </Footer>\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Skeleton } from 'antd'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { RenderRoutes, appRoutes } from './routes'\r\nimport { MainLayout } from './layout'\r\nimport 'antd/dist/antd.css'\r\nimport './App.less'\r\n\r\nconst menus = appRoutes.filter((item) => item.menu)\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true)\r\n  const loadScript = async () => {\r\n    const script = document.createElement('script')\r\n    script.type = 'text/javascript'\r\n    script.src = 'https://imgcache.qq.com/qcloud/tcbjs/1.5.0/tcb.js'\r\n    document.head.appendChild(script)\r\n\r\n    return new Promise((resolve) => {\r\n      script.onload = () => {\r\n        resolve()\r\n      }\r\n    })\r\n  }\r\n\r\n  loadScript().then(() => {\r\n    setLoading(false)\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MainLayout menus={menus}>{loading ? <Skeleton active /> : RenderRoutes()}</MainLayout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as online.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './index.less'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    tcb: any\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}